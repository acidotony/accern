name: Terraform Product deployment 

on: 
  push:
    branches:
      - main
    paths:
      - '/terraform-templates/product/**'
      - '.github/workflows/lz_product_dev.yml'
      
  workflow_dispatch:

env:
  APPLICATION_NAME: "azlzproductdev"

permissions:
  id-token: write
  contents: read

jobs:
  TerraformProductDevDryRun:
    name: Terraform Product Deployment
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.3
        terraform_wrapper: false

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{secrets.AZURE_CLIENT_ID}}
        tenant-id: ${{secrets.AZURE_TENANT_ID}}
        subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    
    - name: Terraform Init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: |
        terraform init \
           -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
           -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
           -backend-config="container_name=${{ vars.BACKEND_CONTAINER_NAME }}" \
           -backend-config="access_key=${{ secrets.BACKEND_ACCESS_KEY }}" \
           -backend-config="key=terraform.tfstate" \
           -reconfigure

        terraform plan -var-file=./environment/terraform_dev.tfvars -out=tfplan

      working-directory: ./terraform-templates/product

  TerraformProductDevDeployment:
    name: IaC LZ Connectivity Deployment
    runs-on: ubuntu-latest
    needs: TerraformProductDevDryRun
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.3
        terraform_wrapper: false

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{secrets.AZURE_CLIENT_ID}}
        tenant-id: ${{secrets.AZURE_TENANT_ID}}
        subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}
    
    - name: Terraform Init and Plan
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: |
        terraform init \
           -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
           -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
           -backend-config="container_name=${{ vars.BACKEND_CONTAINER_NAME }}" \
           -backend-config="access_key=${{ secrets.BACKEND_ACCESS_KEY }}" \
           -backend-config="key=terraform.tfstate" \
           -reconfigure
        
        terraform apply -var-file=./environment/terraform_dev.tfvars --auto-approve
      working-directory: ./terraform-templates/product
  